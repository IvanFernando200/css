html {
  box-sizing: border-box;
  font-size: 16px;
  font-family: sans-serif;
  scroll-behavior: smooth;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

a[href="#top"] {
  margin: 1rem;
  display: block;
  font-size: 2rem;
  text-align: center;
  text-decoration: none;
}

p {
  margin: 0;
}

h2 {
  margin-top: 50vh;
  text-align: center;
}

img {
  margin: auto;
  display: block;
  max-width: 100%;
  height: auto;
}

.menu {
  margin-bottom: 100vh;
  font-size: 125%;
}

.menu li {
  margin-bottom: 1rem;
}

.container {
  margin: 0 auto;
  width: 80%;
  height: 80vh;
  background-color: #222;
  border: medium solid #000;
}

.item {
  padding: 1rem;
  font-size: 1.25rem;
  background-color: #666;
  border: medium solid #999;
}
.sub-item {
  padding: 1rem;
  background-color: #ddd;
  border: medium solid #ccc;
}

/* GRID EXPLICIT */
.grid-explicit {
  font-size: 20px;
  display: grid;
  grid-template-columns: 50% 200px 1fr;
  grid-template-rows: 2rem 20vh 30%;
  grid-template-columns: repeat(5, 20%);
  grid-template-rows: repeat(4, 1fr);
  /* Grid de 4cx5r */
  grid-template-columns: 20% repeat(2, 30%) 20%;
  grid-template-rows: repeat(5, 1fr);

  grid-template-columns: repeat(3, 100px) 1fr;
  grid-template-rows: repeat(3, 150px);
  /* gap: 10px; */
  /* grid-template-columns: repeat(4, min-content); */
  /* grid-template-rows: repeat(4, min-content); */
  grid-auto-columns: 50px;
  /* justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center; */
}
.grid-explicit .item:first-child {
  grid-column: 1 / span 15;
  grid-row: 1 / span 1;
}
.grid-explicit .item:nth-child(2) {
  background-color: aqua;
  grid-column: 1/3;
}
.grid-explicit .item:nth-child(5) {
  background-color: rebeccapurple;
  grid-row: 1 / span 1;
  grid-column: 5 / span 10;
}
.grid-explicit .item:nth-child(6) {
  background-color: #5a3;
  grid-column: span 3;
  grid-row: span 2;
}

.grid-explicit .item:nth-child(9) {
  background-color: #000;
  color: white;
  /* grid-area: grid-row-start/grid-row-end/grid-column-start/grid-column-end; */
  grid-area: 2/3/3/5;
}
.grid-explicit .item:nth-child(14) {
  background-color: red;
  align-self: flex-end;
}
.grid-explicit .item:nth-child(22) {
  background-color: red;
  align-self: flex-start;
  justify-self: center;
}

/* GRID LINE NAMES */
.grid-line-names {
  display: grid;
  grid-template-columns: repeat(2, 150px) 1fr;
  grid-template-rows: repeat(3, auto);
  gap: 10px;
  grid-template-columns: [primero] 150px[segundo] 100px[tercero]1fr[cuarto];
  grid-template-rows: [y0] 100px[y1]100px[y2]1fr[y3];
}
.grid-line-names .item:nth-child(5) {
  background-color: #c70;
  grid-column: segundo/cuarto;
  /* OJO : NO FUNCIONA grid-are: grid-row/grid-column */
}

/* GRID AREAS */
.grid-areas {
  /* 2c,.x3r */
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-template-rows: 100px repeat(2, 1fr) 60px;
  grid-template-areas:
    "header header"
    "content aside"
    "content ."
    "footer footer";
}
.header {
  grid-area: header;
  background-color: lightseagreen;
  /* grid-column: span 2; */
}
.content {
  color: red;
  grid-area: content;
}
.sidebar {
  grid-area: aside;
  background-color: lightgreen;
}
.footer {
  grid-area: footer;
  background-color: lightcoral;
  /* grid-column: span 2; */
}

/* GRID IMPLICITA */
.grid-implicit {
  /* Grid de 4cx3r */
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 200px);
}

/* GRID FLOW */
.grid-flow {
  /* Grid de 5cx4r */
  display: grid;
  grid-template-columns: repeat(5, 200px);
  grid-template-rows: repeat(3, 150px);
  grid-auto-flow: column;
}
.grid-flow .item:nth-child(5) {
  grid-column: span 2;
}
/* GRID FLOW-DENSE */
.grid-flow-dense {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(4, 200px);
  grid-auto-flow: row dense;
  grid-auto-flow: column dense;
}

/* .grid-flow-dense .item:nth-child(9) {
  color: cyan;
  grid-row: span 3;
  grid-column: span 3;
} */
.grid-flow-dense .item:nth-child(11) {
  color: cyan;
  grid-row: span 3;
  grid-column: span 3;
}
/* GRID LAYERS */
.grid-layers {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  gap: 10px;
}
.grid-layers .item:first-child {
  grid-column: 1 / span 2;
  grid-row: 1 / span 2;
}
.grid-layers .item:nth-child(2) {
  grid-column: 3 / span 2;
  grid-row: 1 / span 2;
}
.grid-layers .item:nth-child(3) {
  grid-column: 1 / 3;
  grid-row: 3 / 5;
}
.grid-layers .item:nth-child(4) {
  grid-column: 3/ 5;
  grid-row: 3/5;
}
.grid-layers .item:nth-child(5) {
  opacity: 0.8;
  grid-column: 2 / span 2;
  grid-row: 2 / span 2;
}

/* GRID ORDER */
.grid-order {
  /* Grid de 3cx2r */
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
}
.grid-order .item:nth-child(2) {
  background-color: darkred;
  order: 2;
}
.grid-order .item:nth-child(5) {
  background-color: darkolivegreen;
  order: -100;
}

/* GRID ALIGN */
.grid-align {
  display: grid;
  /* Grid de 3cx2r */
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(2, 200px);
  /* justify-items: center;
  align-items: center; */
  place-items: center;
}
.grid-align .item:nth-child(4) {
  outline: 2px solid #ff0;
  justify-self: start;
  align-self: start;
}

/* GRID ALING TRACKS */
.grid-align-tracks {
  display: grid;
  /* Grid de 3cx2r */
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(2, 200px);
  justify-content: space-evenly;
  align-content: space-evenly;
  /* place-content: space-between center; */
}
.grid-align-tracks .item:nth-child(2) {
  display: flex;
}

/* GRID MIN MAX */
.grid-min-max {
  /* Grid de 4cx?r */
  display: grid;
  grid-template-columns: repeat(4, minmax(200px, 1fr));
  /* grid-auto-rows: 200px; */
}

/* GRID REPEAT */
.grid-repeat {
  display: grid;
  /* Grid de 3cx?r */
  grid-template-columns: repeat(4, 10% 20% 30% 40%);
  grid-template-columns: repeat(1, 10% 20% 30% 40%);
}
/* GRID DINAMIC */
.grid-dynamics {
  display: grid;
  /* Grid de 4cx?r */
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

/* GRID RESPONSIVE */
.grid-responsive {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
}

/* GRID NESTED */
.grid-nested {
  display: grid;
  /* Gid de 3cx?r */
  grid-template-columns: repeat(3, 1fr);
}
/* SUBGRID */
.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, 1fr);
}
.subgrid {
  /* Para que la caracteristica de subgrid funcione es necesario hacer los siguiente: 
  1) Definir explicitamente el tamaÃ±o que ocupara el element o que aplicara subsgrid dentro dle contenedor padre grid, es decir definir sus propiedades grid-columns y grid-row.
  2) Aplicar display grid al elemento que aplicara subgrid.
  3) Aplicar ele valor de subgrid a las columnas a las filas o ambas depende de como se requiera.
  */

  grid-column: span 3;
  grid-row: 1/3;
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
  /* SE ENCUENTRAN EN LA RETICULA DEL PADRE */
}

/* GRID RESUME */
/* .grid-explicit {
  grid-auto-flow: row;
  grid-auto-row: 70px;
  grid-auto-flow: dense;
} */

/* rem es del padre html */
/* em respecto al contenedor */
/* Img: Object-fit & Object-position */

/* contenedor (PADRE) */
/* Explicito */
/* min-content: ancho minimo de la palabra mas larga */
/* max-content: ancho de toda la horacion */
/* minmax(100px, 300px) */
/* minmax(min-content,max-content) */
/* repeat(auto-fill, minmax(120px,1fr)); */
/* auto-fill ; auto-fit */
/* grid-template-columns: repeat(4, min-content); */

/* grid-template-columns: repeat(5,1fr); */
/* grid-template-rows: repeat(4,auto); */

/* gap: row column */
/* gap: 1vh 1vw; */
/* gap: 10px; */

/* .
  background: radial-gradient(circle, #fff, #222);
*/
/* GRID AREAS */

/* justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center; */

/* Implicito */
/* grid-auto-columns: 100px; */
/* grid-auto-flow: column; */
/* grid-auto-flow: dense; */
/* grid-auto-flow: column dense; */

/* item (HIJO) */
/* grid-row-start: 1; */
/* grid-row-end: 3; */
/* grid-row: 2/3;
grid-column: 2/4; */
/* grid-column: 1 / span 5; */

/* align-self: flex-end; */
/* justify-self: flex-start; */
/* place-self: align-self justify-self; */
/* place-self: end start */
/* en caso que ambos sean end o star-----> place-self: end; */
/* order: #; igual que en flex */

/* SUBGRID */
